/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as demoRouteRouteImport } from './routes/(demo)/route'
import { Route as authRouteRouteImport } from './routes/(auth)/route'
import { Route as appRouteRouteImport } from './routes/(app)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as publicForm_uuidRouteRouteImport } from './routes/(public)/$form_uuid/route'
import { Route as publicForm_uuidIndexRouteImport } from './routes/(public)/$form_uuid/index'
import { Route as authLogoutIndexRouteImport } from './routes/(auth)/logout/index'
import { Route as authLoginIndexRouteImport } from './routes/(auth)/login/index'
import { Route as appDashboardIndexRouteImport } from './routes/(app)/dashboard/index'
import { Route as demoPlaygroundQueryRouteRouteImport } from './routes/(demo)/playground/query/route'
import { Route as demoPlaygroundFormsRouteRouteImport } from './routes/(demo)/playground/forms/route'
import { Route as appDashboardFormsRouteRouteImport } from './routes/(app)/dashboard/forms/route'
import { Route as demoPlaygroundQueryIndexRouteImport } from './routes/(demo)/playground/query/index'
import { Route as demoPlaygroundFormsIndexRouteImport } from './routes/(demo)/playground/forms/index'
import { Route as appDashboardFormsIndexRouteImport } from './routes/(app)/dashboard/forms/index'
import { Route as appDashboardFormsForm_uuidRouteRouteImport } from './routes/(app)/dashboard/forms/$form_uuid/route'
import { Route as appDashboardFormsForm_uuidResponsesIndexRouteImport } from './routes/(app)/dashboard/forms/$form_uuid/responses/index'
import { Route as appDashboardFormsForm_uuidPreviewIndexRouteImport } from './routes/(app)/dashboard/forms/$form_uuid/preview/index'
import { Route as appDashboardFormsForm_uuidEditIndexRouteImport } from './routes/(app)/dashboard/forms/$form_uuid/edit/index'
import { ServerRoute as ApiUsersServerRouteImport } from './routes/api/users'
import { ServerRoute as ApiUsersUserIdServerRouteImport } from './routes/api/users.$userId'

const rootServerRouteImport = createServerRootRoute()

const demoRouteRoute = demoRouteRouteImport.update({
  id: '/(demo)',
  getParentRoute: () => rootRouteImport,
} as any)
const authRouteRoute = authRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const appRouteRoute = appRouteRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const publicForm_uuidRouteRoute = publicForm_uuidRouteRouteImport.update({
  id: '/(public)/$form_uuid',
  path: '/$form_uuid',
  getParentRoute: () => rootRouteImport,
} as any)
const publicForm_uuidIndexRoute = publicForm_uuidIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => publicForm_uuidRouteRoute,
} as any)
const authLogoutIndexRoute = authLogoutIndexRouteImport.update({
  id: '/logout/',
  path: '/logout/',
  getParentRoute: () => authRouteRoute,
} as any)
const authLoginIndexRoute = authLoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => authRouteRoute,
} as any)
const appDashboardIndexRoute = appDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => appRouteRoute,
} as any)
const demoPlaygroundQueryRouteRoute =
  demoPlaygroundQueryRouteRouteImport.update({
    id: '/playground/query',
    path: '/playground/query',
    getParentRoute: () => demoRouteRoute,
  } as any)
const demoPlaygroundFormsRouteRoute =
  demoPlaygroundFormsRouteRouteImport.update({
    id: '/playground/forms',
    path: '/playground/forms',
    getParentRoute: () => demoRouteRoute,
  } as any)
const appDashboardFormsRouteRoute = appDashboardFormsRouteRouteImport.update({
  id: '/dashboard/forms',
  path: '/dashboard/forms',
  getParentRoute: () => appRouteRoute,
} as any)
const demoPlaygroundQueryIndexRoute =
  demoPlaygroundQueryIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => demoPlaygroundQueryRouteRoute,
  } as any)
const demoPlaygroundFormsIndexRoute =
  demoPlaygroundFormsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => demoPlaygroundFormsRouteRoute,
  } as any)
const appDashboardFormsIndexRoute = appDashboardFormsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appDashboardFormsRouteRoute,
} as any)
const appDashboardFormsForm_uuidRouteRoute =
  appDashboardFormsForm_uuidRouteRouteImport.update({
    id: '/$form_uuid',
    path: '/$form_uuid',
    getParentRoute: () => appDashboardFormsRouteRoute,
  } as any)
const appDashboardFormsForm_uuidResponsesIndexRoute =
  appDashboardFormsForm_uuidResponsesIndexRouteImport.update({
    id: '/responses/',
    path: '/responses/',
    getParentRoute: () => appDashboardFormsForm_uuidRouteRoute,
  } as any)
const appDashboardFormsForm_uuidPreviewIndexRoute =
  appDashboardFormsForm_uuidPreviewIndexRouteImport.update({
    id: '/preview/',
    path: '/preview/',
    getParentRoute: () => appDashboardFormsForm_uuidRouteRoute,
  } as any)
const appDashboardFormsForm_uuidEditIndexRoute =
  appDashboardFormsForm_uuidEditIndexRouteImport.update({
    id: '/edit/',
    path: '/edit/',
    getParentRoute: () => appDashboardFormsForm_uuidRouteRoute,
  } as any)
const ApiUsersServerRoute = ApiUsersServerRouteImport.update({
  id: '/api/users',
  path: '/api/users',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUsersUserIdServerRoute = ApiUsersUserIdServerRouteImport.update({
  id: '/$userId',
  path: '/$userId',
  getParentRoute: () => ApiUsersServerRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof demoRouteRouteWithChildren
  '/$form_uuid': typeof publicForm_uuidRouteRouteWithChildren
  '/dashboard/forms': typeof appDashboardFormsRouteRouteWithChildren
  '/playground/forms': typeof demoPlaygroundFormsRouteRouteWithChildren
  '/playground/query': typeof demoPlaygroundQueryRouteRouteWithChildren
  '/dashboard': typeof appDashboardIndexRoute
  '/login': typeof authLoginIndexRoute
  '/logout': typeof authLogoutIndexRoute
  '/$form_uuid/': typeof publicForm_uuidIndexRoute
  '/dashboard/forms/$form_uuid': typeof appDashboardFormsForm_uuidRouteRouteWithChildren
  '/dashboard/forms/': typeof appDashboardFormsIndexRoute
  '/playground/forms/': typeof demoPlaygroundFormsIndexRoute
  '/playground/query/': typeof demoPlaygroundQueryIndexRoute
  '/dashboard/forms/$form_uuid/edit': typeof appDashboardFormsForm_uuidEditIndexRoute
  '/dashboard/forms/$form_uuid/preview': typeof appDashboardFormsForm_uuidPreviewIndexRoute
  '/dashboard/forms/$form_uuid/responses': typeof appDashboardFormsForm_uuidResponsesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof demoRouteRouteWithChildren
  '/dashboard': typeof appDashboardIndexRoute
  '/login': typeof authLoginIndexRoute
  '/logout': typeof authLogoutIndexRoute
  '/$form_uuid': typeof publicForm_uuidIndexRoute
  '/dashboard/forms/$form_uuid': typeof appDashboardFormsForm_uuidRouteRouteWithChildren
  '/dashboard/forms': typeof appDashboardFormsIndexRoute
  '/playground/forms': typeof demoPlaygroundFormsIndexRoute
  '/playground/query': typeof demoPlaygroundQueryIndexRoute
  '/dashboard/forms/$form_uuid/edit': typeof appDashboardFormsForm_uuidEditIndexRoute
  '/dashboard/forms/$form_uuid/preview': typeof appDashboardFormsForm_uuidPreviewIndexRoute
  '/dashboard/forms/$form_uuid/responses': typeof appDashboardFormsForm_uuidResponsesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(app)': typeof appRouteRouteWithChildren
  '/(auth)': typeof authRouteRouteWithChildren
  '/(demo)': typeof demoRouteRouteWithChildren
  '/(public)/$form_uuid': typeof publicForm_uuidRouteRouteWithChildren
  '/(app)/dashboard/forms': typeof appDashboardFormsRouteRouteWithChildren
  '/(demo)/playground/forms': typeof demoPlaygroundFormsRouteRouteWithChildren
  '/(demo)/playground/query': typeof demoPlaygroundQueryRouteRouteWithChildren
  '/(app)/dashboard/': typeof appDashboardIndexRoute
  '/(auth)/login/': typeof authLoginIndexRoute
  '/(auth)/logout/': typeof authLogoutIndexRoute
  '/(public)/$form_uuid/': typeof publicForm_uuidIndexRoute
  '/(app)/dashboard/forms/$form_uuid': typeof appDashboardFormsForm_uuidRouteRouteWithChildren
  '/(app)/dashboard/forms/': typeof appDashboardFormsIndexRoute
  '/(demo)/playground/forms/': typeof demoPlaygroundFormsIndexRoute
  '/(demo)/playground/query/': typeof demoPlaygroundQueryIndexRoute
  '/(app)/dashboard/forms/$form_uuid/edit/': typeof appDashboardFormsForm_uuidEditIndexRoute
  '/(app)/dashboard/forms/$form_uuid/preview/': typeof appDashboardFormsForm_uuidPreviewIndexRoute
  '/(app)/dashboard/forms/$form_uuid/responses/': typeof appDashboardFormsForm_uuidResponsesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$form_uuid'
    | '/dashboard/forms'
    | '/playground/forms'
    | '/playground/query'
    | '/dashboard'
    | '/login'
    | '/logout'
    | '/$form_uuid/'
    | '/dashboard/forms/$form_uuid'
    | '/dashboard/forms/'
    | '/playground/forms/'
    | '/playground/query/'
    | '/dashboard/forms/$form_uuid/edit'
    | '/dashboard/forms/$form_uuid/preview'
    | '/dashboard/forms/$form_uuid/responses'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/logout'
    | '/$form_uuid'
    | '/dashboard/forms/$form_uuid'
    | '/dashboard/forms'
    | '/playground/forms'
    | '/playground/query'
    | '/dashboard/forms/$form_uuid/edit'
    | '/dashboard/forms/$form_uuid/preview'
    | '/dashboard/forms/$form_uuid/responses'
  id:
    | '__root__'
    | '/'
    | '/(app)'
    | '/(auth)'
    | '/(demo)'
    | '/(public)/$form_uuid'
    | '/(app)/dashboard/forms'
    | '/(demo)/playground/forms'
    | '/(demo)/playground/query'
    | '/(app)/dashboard/'
    | '/(auth)/login/'
    | '/(auth)/logout/'
    | '/(public)/$form_uuid/'
    | '/(app)/dashboard/forms/$form_uuid'
    | '/(app)/dashboard/forms/'
    | '/(demo)/playground/forms/'
    | '/(demo)/playground/query/'
    | '/(app)/dashboard/forms/$form_uuid/edit/'
    | '/(app)/dashboard/forms/$form_uuid/preview/'
    | '/(app)/dashboard/forms/$form_uuid/responses/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  appRouteRoute: typeof appRouteRouteWithChildren
  authRouteRoute: typeof authRouteRouteWithChildren
  demoRouteRoute: typeof demoRouteRouteWithChildren
  publicForm_uuidRouteRoute: typeof publicForm_uuidRouteRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/users': typeof ApiUsersServerRouteWithChildren
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
}
export interface FileServerRoutesByTo {
  '/api/users': typeof ApiUsersServerRouteWithChildren
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/users': typeof ApiUsersServerRouteWithChildren
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/users' | '/api/users/$userId'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/users' | '/api/users/$userId'
  id: '__root__' | '/api/users' | '/api/users/$userId'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiUsersServerRoute: typeof ApiUsersServerRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(demo)': {
      id: '/(demo)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof demoRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/$form_uuid': {
      id: '/(public)/$form_uuid'
      path: '/$form_uuid'
      fullPath: '/$form_uuid'
      preLoaderRoute: typeof publicForm_uuidRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/$form_uuid/': {
      id: '/(public)/$form_uuid/'
      path: '/'
      fullPath: '/$form_uuid/'
      preLoaderRoute: typeof publicForm_uuidIndexRouteImport
      parentRoute: typeof publicForm_uuidRouteRoute
    }
    '/(auth)/logout/': {
      id: '/(auth)/logout/'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof authLogoutIndexRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/login/': {
      id: '/(auth)/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginIndexRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(app)/dashboard/': {
      id: '/(app)/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof appDashboardIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(demo)/playground/query': {
      id: '/(demo)/playground/query'
      path: '/playground/query'
      fullPath: '/playground/query'
      preLoaderRoute: typeof demoPlaygroundQueryRouteRouteImport
      parentRoute: typeof demoRouteRoute
    }
    '/(demo)/playground/forms': {
      id: '/(demo)/playground/forms'
      path: '/playground/forms'
      fullPath: '/playground/forms'
      preLoaderRoute: typeof demoPlaygroundFormsRouteRouteImport
      parentRoute: typeof demoRouteRoute
    }
    '/(app)/dashboard/forms': {
      id: '/(app)/dashboard/forms'
      path: '/dashboard/forms'
      fullPath: '/dashboard/forms'
      preLoaderRoute: typeof appDashboardFormsRouteRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(demo)/playground/query/': {
      id: '/(demo)/playground/query/'
      path: '/'
      fullPath: '/playground/query/'
      preLoaderRoute: typeof demoPlaygroundQueryIndexRouteImport
      parentRoute: typeof demoPlaygroundQueryRouteRoute
    }
    '/(demo)/playground/forms/': {
      id: '/(demo)/playground/forms/'
      path: '/'
      fullPath: '/playground/forms/'
      preLoaderRoute: typeof demoPlaygroundFormsIndexRouteImport
      parentRoute: typeof demoPlaygroundFormsRouteRoute
    }
    '/(app)/dashboard/forms/': {
      id: '/(app)/dashboard/forms/'
      path: '/'
      fullPath: '/dashboard/forms/'
      preLoaderRoute: typeof appDashboardFormsIndexRouteImport
      parentRoute: typeof appDashboardFormsRouteRoute
    }
    '/(app)/dashboard/forms/$form_uuid': {
      id: '/(app)/dashboard/forms/$form_uuid'
      path: '/$form_uuid'
      fullPath: '/dashboard/forms/$form_uuid'
      preLoaderRoute: typeof appDashboardFormsForm_uuidRouteRouteImport
      parentRoute: typeof appDashboardFormsRouteRoute
    }
    '/(app)/dashboard/forms/$form_uuid/responses/': {
      id: '/(app)/dashboard/forms/$form_uuid/responses/'
      path: '/responses'
      fullPath: '/dashboard/forms/$form_uuid/responses'
      preLoaderRoute: typeof appDashboardFormsForm_uuidResponsesIndexRouteImport
      parentRoute: typeof appDashboardFormsForm_uuidRouteRoute
    }
    '/(app)/dashboard/forms/$form_uuid/preview/': {
      id: '/(app)/dashboard/forms/$form_uuid/preview/'
      path: '/preview'
      fullPath: '/dashboard/forms/$form_uuid/preview'
      preLoaderRoute: typeof appDashboardFormsForm_uuidPreviewIndexRouteImport
      parentRoute: typeof appDashboardFormsForm_uuidRouteRoute
    }
    '/(app)/dashboard/forms/$form_uuid/edit/': {
      id: '/(app)/dashboard/forms/$form_uuid/edit/'
      path: '/edit'
      fullPath: '/dashboard/forms/$form_uuid/edit'
      preLoaderRoute: typeof appDashboardFormsForm_uuidEditIndexRouteImport
      parentRoute: typeof appDashboardFormsForm_uuidRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/users': {
      id: '/api/users'
      path: '/api/users'
      fullPath: '/api/users'
      preLoaderRoute: typeof ApiUsersServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/users/$userId': {
      id: '/api/users/$userId'
      path: '/$userId'
      fullPath: '/api/users/$userId'
      preLoaderRoute: typeof ApiUsersUserIdServerRouteImport
      parentRoute: typeof ApiUsersServerRoute
    }
  }
}

interface appDashboardFormsForm_uuidRouteRouteChildren {
  appDashboardFormsForm_uuidEditIndexRoute: typeof appDashboardFormsForm_uuidEditIndexRoute
  appDashboardFormsForm_uuidPreviewIndexRoute: typeof appDashboardFormsForm_uuidPreviewIndexRoute
  appDashboardFormsForm_uuidResponsesIndexRoute: typeof appDashboardFormsForm_uuidResponsesIndexRoute
}

const appDashboardFormsForm_uuidRouteRouteChildren: appDashboardFormsForm_uuidRouteRouteChildren =
  {
    appDashboardFormsForm_uuidEditIndexRoute:
      appDashboardFormsForm_uuidEditIndexRoute,
    appDashboardFormsForm_uuidPreviewIndexRoute:
      appDashboardFormsForm_uuidPreviewIndexRoute,
    appDashboardFormsForm_uuidResponsesIndexRoute:
      appDashboardFormsForm_uuidResponsesIndexRoute,
  }

const appDashboardFormsForm_uuidRouteRouteWithChildren =
  appDashboardFormsForm_uuidRouteRoute._addFileChildren(
    appDashboardFormsForm_uuidRouteRouteChildren,
  )

interface appDashboardFormsRouteRouteChildren {
  appDashboardFormsForm_uuidRouteRoute: typeof appDashboardFormsForm_uuidRouteRouteWithChildren
  appDashboardFormsIndexRoute: typeof appDashboardFormsIndexRoute
}

const appDashboardFormsRouteRouteChildren: appDashboardFormsRouteRouteChildren =
  {
    appDashboardFormsForm_uuidRouteRoute:
      appDashboardFormsForm_uuidRouteRouteWithChildren,
    appDashboardFormsIndexRoute: appDashboardFormsIndexRoute,
  }

const appDashboardFormsRouteRouteWithChildren =
  appDashboardFormsRouteRoute._addFileChildren(
    appDashboardFormsRouteRouteChildren,
  )

interface appRouteRouteChildren {
  appDashboardFormsRouteRoute: typeof appDashboardFormsRouteRouteWithChildren
  appDashboardIndexRoute: typeof appDashboardIndexRoute
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appDashboardFormsRouteRoute: appDashboardFormsRouteRouteWithChildren,
  appDashboardIndexRoute: appDashboardIndexRoute,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(
  appRouteRouteChildren,
)

interface authRouteRouteChildren {
  authLoginIndexRoute: typeof authLoginIndexRoute
  authLogoutIndexRoute: typeof authLogoutIndexRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authLoginIndexRoute: authLoginIndexRoute,
  authLogoutIndexRoute: authLogoutIndexRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface demoPlaygroundFormsRouteRouteChildren {
  demoPlaygroundFormsIndexRoute: typeof demoPlaygroundFormsIndexRoute
}

const demoPlaygroundFormsRouteRouteChildren: demoPlaygroundFormsRouteRouteChildren =
  {
    demoPlaygroundFormsIndexRoute: demoPlaygroundFormsIndexRoute,
  }

const demoPlaygroundFormsRouteRouteWithChildren =
  demoPlaygroundFormsRouteRoute._addFileChildren(
    demoPlaygroundFormsRouteRouteChildren,
  )

interface demoPlaygroundQueryRouteRouteChildren {
  demoPlaygroundQueryIndexRoute: typeof demoPlaygroundQueryIndexRoute
}

const demoPlaygroundQueryRouteRouteChildren: demoPlaygroundQueryRouteRouteChildren =
  {
    demoPlaygroundQueryIndexRoute: demoPlaygroundQueryIndexRoute,
  }

const demoPlaygroundQueryRouteRouteWithChildren =
  demoPlaygroundQueryRouteRoute._addFileChildren(
    demoPlaygroundQueryRouteRouteChildren,
  )

interface demoRouteRouteChildren {
  demoPlaygroundFormsRouteRoute: typeof demoPlaygroundFormsRouteRouteWithChildren
  demoPlaygroundQueryRouteRoute: typeof demoPlaygroundQueryRouteRouteWithChildren
}

const demoRouteRouteChildren: demoRouteRouteChildren = {
  demoPlaygroundFormsRouteRoute: demoPlaygroundFormsRouteRouteWithChildren,
  demoPlaygroundQueryRouteRoute: demoPlaygroundQueryRouteRouteWithChildren,
}

const demoRouteRouteWithChildren = demoRouteRoute._addFileChildren(
  demoRouteRouteChildren,
)

interface publicForm_uuidRouteRouteChildren {
  publicForm_uuidIndexRoute: typeof publicForm_uuidIndexRoute
}

const publicForm_uuidRouteRouteChildren: publicForm_uuidRouteRouteChildren = {
  publicForm_uuidIndexRoute: publicForm_uuidIndexRoute,
}

const publicForm_uuidRouteRouteWithChildren =
  publicForm_uuidRouteRoute._addFileChildren(publicForm_uuidRouteRouteChildren)

interface ApiUsersServerRouteChildren {
  ApiUsersUserIdServerRoute: typeof ApiUsersUserIdServerRoute
}

const ApiUsersServerRouteChildren: ApiUsersServerRouteChildren = {
  ApiUsersUserIdServerRoute: ApiUsersUserIdServerRoute,
}

const ApiUsersServerRouteWithChildren = ApiUsersServerRoute._addFileChildren(
  ApiUsersServerRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  appRouteRoute: appRouteRouteWithChildren,
  authRouteRoute: authRouteRouteWithChildren,
  demoRouteRoute: demoRouteRouteWithChildren,
  publicForm_uuidRouteRoute: publicForm_uuidRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiUsersServerRoute: ApiUsersServerRouteWithChildren,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
